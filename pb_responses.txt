List/Search (vehicle_listings)
Fetch a paginated vehicle_listings records list, supporting sorting and filtering.

import PocketBase from 'pocketbase';

const pb = new PocketBase('https://sl-car-finder-pb.chronosapian.my.id');

...

// fetch a paginated records list
const resultList = await pb.collection('vehicle_listings').getList(1, 50, {
    filter: 'someField1 != someField2',
});

// you can also fetch all records at once via getFullList
const records = await pb.collection('vehicle_listings').getFullList({
    sort: '-someField',
});

// or fetch only the first record that matches the specified filter
const record = await pb.collection('vehicle_listings').getFirstListItem('someField="test"', {
    expand: 'relField1,relField2.subRelField',
});
JavaScript SDK
API details
GET
/api/collections/vehicle_listings/records

Query parameters
page	Number	The page (aka. offset) of the paginated list (default to 1).
perPage	Number	Specify the max returned records per page (default to 30).
sort	String	Specify the records order attribute(s).
Add - / + (default) in front of the attribute for DESC / ASC order. Ex.:
// DESC by created and ASC by id
?sort=-created,id
Supported record sort fields:
@random, @rowid, id, title, pricing, location, mileage, posted_date, link, created, updated

filter	String	Filter the returned records. Ex.:
?filter=(id='abc' && created>'2022-01-01')
expand	String	Auto expand record relations. Ex.:
?expand=relField1,relField2.subRelField
Supports up to 6-levels depth nested relations expansion.
The expanded relations will be appended to each individual record under the expand property (eg. "expand": {"relField1": {...}, ...}).
Only the relations to which the request user has permissions to view will be expanded.
fields	String	
Comma separated string of the fields to return in the JSON response (by default returns all fields). Ex.:
?fields=*,expand.relField.name

* targets all keys from the specific depth level.

In addition, the following field modifiers are also supported:

:excerpt(maxLength, withEllipsis?)
Returns a short plain text version of the field string value.
Ex.: ?fields=*,description:excerpt(200,true)
skipTotal	Boolean	If it is set the total counts query will be skipped and the response fields totalItems and totalPages will have -1 value.
This could drastically speed up the search queries when the total counters are not needed or cursor based pagination is used.
For optimization purposes, it is set by default for the getFirstListItem() and getFullList() SDKs methods.
Responses
{
  "page": 1,
  "perPage": 30,
  "totalPages": 1,
  "totalItems": 2,
  "items": [
    {
      "collectionId": "pbc_507420477",
      "collectionName": "vehicle_listings",
      "id": "test",
      "title": "test",
      "pricing": 123,
      "location": "test",
      "mileage": 123,
      "posted_date": "2022-01-01 10:00:00.123Z",
      "link": "https://example.com",
      "created": "2022-01-01 10:00:00.123Z",
      "updated": "2022-01-01 10:00:00.123Z"
    },
    {
      "collectionId": "pbc_507420477",
      "collectionName": "vehicle_listings",
      "id": "[object Object]2",
      "title": "test",
      "pricing": 123,
      "location": "test",
      "mileage": 123,
      "posted_date": "2022-01-01 10:00:00.123Z",
      "link": "https://example.com",
      "created": "2022-01-01 10:00:00.123Z",
      "updated": "2022-01-01 10:00:00.123Z"
    }
  ]
}

View (vehicle_listings)
Fetch a single vehicle_listings record.

import PocketBase from 'pocketbase';

const pb = new PocketBase('https://sl-car-finder-pb.chronosapian.my.id');

...

const record = await pb.collection('vehicle_listings').getOne('RECORD_ID', {
    expand: 'relField1,relField2.subRelField',
});
JavaScript SDK
API details
GET
/api/collections/vehicle_listings/records/:id

Path Parameters
id	String	ID of the record to view.
Query parameters
expand	String	Auto expand record relations. Ex.:
?expand=relField1,relField2.subRelField
Supports up to 6-levels depth nested relations expansion.
The expanded relations will be appended to the record under the expand property (eg. "expand": {"relField1": {...}, ...}).
Only the relations to which the request user has permissions to view will be expanded.
fields	String	
Comma separated string of the fields to return in the JSON response (by default returns all fields). Ex.:
?fields=*,expand.relField.name

* targets all keys from the specific depth level.

In addition, the following field modifiers are also supported:

:excerpt(maxLength, withEllipsis?)
Returns a short plain text version of the field string value.
Ex.: ?fields=*,description:excerpt(200,true)
Responses
{
  "collectionId": "pbc_507420477",
  "collectionName": "vehicle_listings",
  "id": "test",
  "title": "test",
  "pricing": 123,
  "location": "test",
  "mileage": 123,
  "posted_date": "2022-01-01 10:00:00.123Z",
  "link": "https://example.com",
  "created": "2022-01-01 10:00:00.123Z",
  "updated": "2022-01-01 10:00:00.123Z"
}